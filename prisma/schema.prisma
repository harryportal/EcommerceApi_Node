// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// products -- one to many with product rating
// when returning products for a particular category i want to return sorted by the product rating
// categories - one to many with products table
// User Model
// Product Rating  -- {content: string, rate: int, productId: int} 

model User {
  id String @id @default(uuid())
  email String @unique @db.VarChar(255)
  username String @db.VarChar(255)
  password String @db.VarChar(255)
  profile Profile?
  reviews Review[]  // the reviews the user has made on different product
  orders Order[] // the orders the user have made
}

model Product {
  id String @id @default(uuid())
  name String @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  description String 
  price Decimal
  imageUrl String?  
  reviews Review[] 
  categoryId String
  orderDetails OrderDetails[]
  category Category @relation(fields: [categoryId], references: [id])
}

model Review {
  content String 
  userId String
  productId String
  rating Int @default(0)
  createdAt DateTime @default(now())
  user User @relation(fields: [userId],references: [id])
  product Product @relation(fields: [productId], references: [id])
  @@id([userId, productId])
}

model Category { 
  id String @id @default(uuid()) 
  imageUrl String?
  products Product[]
  name String @db.VarChar(255)
}

model Profile {
  id String @id @default(uuid())
  firstname String @db.VarChar(255)
  lastname String @db.VarChar(255)
  address String @db.VarChar(255)
  userId String @unique
  phone String
  imageUrl String?
  user User @relation(fields: [userId], references: [id])
}

model OrderDetails{    
  productId String
  orderId String
  product Product @relation(fields: [productId], references: [id]) 
  order Order @relation(fields: [orderId], references: [id]) 
  quantity Int 
  price Decimal
  @@id([productId, orderId])
}


model Order {
  id String @id @default(uuid()) 
  reference String
  totalPrice Decimal?
  userId String 
  user User @relation(fields: [userId], references: [id])
  orderDetails OrderDetails[]
}